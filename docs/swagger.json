{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of contacts app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://example.com/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations with contacts."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "registerUser",
        "description": "Register a new user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User`s name",
                    "example": "Ivan Durak"
                  },
                  "email": {
                    "type": "string",
                    "description": "User`s email. Valid email addresses: john.doe@example.com, john-doe@example.com, john@example.co.uk,john.doe@example.co.in",
                    "uniqueItems": true,
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User`s password. Must be at least 3 symbols",
                    "example": "111"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "headers": {
              "Set-Cookies": {
                "description": "Cookies with the new access and refresh tokens",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "description": "Login an existing user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User`s email. Valid email addresses: john.doe@example.com, john-doe@example.com, john@example.co.uk, john.doe@example.co.in",
                    "example": "ivan_durak@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "User`s password. Must be at least 3 symbols",
                    "example": "111"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "You`ve been successfully logged in!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "You`ve been successfully logged in!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "The access token is automatically generated by database",
                          "example": "r+IhxqOAYKoqti5ZaGByw9ls2k016pQQDkfMfNVu"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh tokens",
        "operationId": "refreshUsersSession",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Endpoint to receive the access and refresh tokens",
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The refresh token"
          },
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session id"
          }
        ],
        "responses": {
          "200": {
            "description": "The session has been successfully refreshed!",
            "headers": {
              "Set-Cookies": {
                "description": "Cookies with the new access and refresh tokens",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "The session has been successfully refreshed!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "The refreshed access token",
                          "example": "zPy2C69jOZOpghebE0MYyWAJPXaa62YTf1lrEEwl"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Logout an existing user",
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The refresh token"
          },
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session id"
          }
        ],
        "responses": {
          "204": {
            "description": "No content - The user has been successfully logged out!"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Request to reset a password",
        "operationId": "requestResetPassword",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Send a request to the user email included the link to reset his password",
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The refresh token"
          },
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Type in the existing user email",
                    "example": "ivan_durak@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The reset password email has been successfully sent!",
            "headers": {
              "Set-Cookies": {
                "description": "Cookies with the new access and refresh tokens",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "The reset password email has been successfully sent!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Endpoint to reset password",
        "operationId": "resetPwd",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "description": "Endpoint to send the new password along the access token from the request email link",
        "parameters": [
          {
            "in": "cookie",
            "name": "refreshToken",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The refresh token"
          },
          {
            "in": "cookie",
            "name": "sessionId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The session id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Received the token by the request reset password email",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI2Njc2NDgxMTA4N2EzMTQwYmUxODQ5MDkiLCJlbWFpbCI6Im1hdHZlZXYuci52QGljbG91ZC5jb20iLCJpYXQiOjE3MTkxODI1MjcsImV4cCI6MTcxOTE4MjgyN30.dH54pdpFObUD1J29Q6SppUM0h5Oq-rz5XymE3dnNuTI"
                  },
                  "password": {
                    "type": "string",
                    "description": "New user`s password. At least 3 symbols",
                    "example": "222"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The password has been successfully reset!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "The password has been successfully reset!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contacts",
        "operationId": "getAllContacts",
        "description": "Get list of contacts, filter and sort them",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer"
            },
            "example": 10
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "example": "name",
            "description": "All contact`s fields can be mentioned. Default value - _id"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "example": "asc",
            "description": "The default value is \"asc\""
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "Ivan",
            "description": "Filter contacts by name, including symbols in the query"
          },
          {
            "in": "query",
            "name": "phoneNumber",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "1819",
            "description": "Filter contacts by phone number, including symbols in the query"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string",
              "default": ""
            },
            "example": "ivan_durak@example.com",
            "description": "Filter contacts by email, including symbols in the query"
          },
          {
            "in": "query",
            "name": "isFavorite",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "example": true,
            "description": "Filter contacts by favorite field"
          }
        ],
        "responses": {
          "200": {
            "description": "The contacts have been successfully found!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "The contacts have been successfully found!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 2
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 50
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 20
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new contact",
        "operationId": "addNewContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact`s name",
                    "example": "Ivan Durak"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact`s phone number",
                    "example": "380999999"
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact`s email",
                    "example": "ivan_durak@example.com"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Is this contact favorite?",
                    "default": false,
                    "example": true
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Contact`s type",
                    "enum": [
                      "home",
                      "personal"
                    ],
                    "default": "personal",
                    "example": "home"
                  },
                  "photo": {
                    "type": "string",
                    "description": "Contact`s photograph link",
                    "example": "http://localhost:3000/auth/uploads/1719196919385_26702.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created a contact!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete your contact",
        "operationId": "deleteContact",
        "description": "Delete your contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact with this id was successfully deleted, no content returned"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update your contact",
        "operationId": "updateContact",
        "description": "Update your contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact`s name",
                    "example": "Ivan Durak"
                  },
                  "phoneNumber": {
                    "type": "number",
                    "description": "Contact`s phone number",
                    "example": "1819"
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact`s email",
                    "example": "ivan_durak@example.com"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Is this contact favorite?",
                    "default": false,
                    "example": true
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Contact`s type",
                    "enum": [
                      "home",
                      "personal"
                    ],
                    "default": "personal",
                    "example": "home"
                  },
                  "photo": {
                    "type": "string",
                    "description": "Contact`s photograph link",
                    "example": "http://localhost:3000/auth/uploads/1719196919385_26702.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated a contact by id 65ca67e7ae7f10c88b598384",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a contact by id 65ca67e7ae7f10c88b598384"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContactById",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found contact with id 65ca67e7ae7f10c88b598384!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 66738712d7702921c0987282!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "_id",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "User`s name",
            "example": "Ivan Durak"
          },
          "email": {
            "type": "string",
            "description": "User`s email",
            "example": "john.doe@example.com"
          },
          "_id": {
            "type": "string",
            "description": "User id is automatically created by database",
            "example": "66804f38fa6c3fdb57a8771e"
          },
          "createdAt": {
            "description": "User`s created data",
            "type": "string",
            "example": "2024-06-21T03:02:44.125+00:00"
          },
          "updatedAt": {
            "description": "User`s updated data",
            "type": "string",
            "example": "2024-06-24T02:41:59.399+00:00"
          }
        }
      },
      "contact": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber"
        ],
        "properties": {
          "_id": {
            "description": "Contact`s id",
            "type": "string",
            "example": "66738712d7702921c0987282"
          },
          "name": {
            "description": "Contact`s name",
            "type": "string",
            "example": "Ivan Durak"
          },
          "userId": {
            "description": "UserId will be automatically attached to the database, since you`ve logged in",
            "type": "string",
            "example": "666f9fbc6c7a6b62825a3c68"
          },
          "phoneNumber": {
            "description": "Contact`s phone number",
            "type": "string",
            "example": "380999999"
          },
          "email": {
            "description": "Contact`s email",
            "type": "string",
            "example": "ivan_durak@example.com"
          },
          "isFavorite": {
            "description": "Is contact favorite",
            "type": "boolean",
            "example": true
          },
          "contactType": {
            "description": "Contact`s type",
            "type": "string",
            "enum": [
              "home",
              "personal"
            ],
            "example": "work"
          },
          "photo": {
            "description": "Contact`s photograph link",
            "type": "string",
            "example": "http://localhost:3000/auth/uploads/1719196919385_26702.jpg"
          },
          "createdAt": {
            "description": "Contact`s created data",
            "type": "string",
            "example": "2024-06-21T03:02:44.125+00:00"
          },
          "updatedAt": {
            "description": "Contact`s updated data",
            "type": "string",
            "example": "2024-06-24T02:41:59.399+00:00"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad request!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Bad request!"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Please provide the Authorization header"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "The contact with this id was not found!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "The contact with id 65ca67e7ae7f10c88b598384 was not found!"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}